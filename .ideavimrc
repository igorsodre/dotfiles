""""""""""""""""""""""""""""""  plugins  """""""""""""""""""""""""""
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'vim-scripts/argtextobj.vim'
Plug 'christoomey/vim-system-copy'
" Plug 'mg979/vim-visual-multi'

" dead keys remap for being able to set marks
nmap à `a
nmap Á 'A
nmap À `A
nmap ç 'c
nmap Ç 'C
nmap é 'e
nmap è `e
nmap É 'E
nmap È `E
nmap í 'i
nmap ì `i
nmap Í 'I
nmap Ì `I
nmap ó 'o
nmap ò `o
nmap Ó 'O
nmap Ò `O
nmap ú 'u
nmap ù `u
nmap Ú 'U
nmap Ù `U

" handlers
sethandler <S-CR> a:vim
sethandler <C-Pageup> a:ide
sethandler <C-Pagedown> a:ide
sethandler <S-Left> a:ide
sethandler <C-Left> a:ide
sethandler <S-Up> a:ide
sethandler <C-Up> a:ide
sethandler <S-Right> a:ide
sethandler <C-Right> a:ide
sethandler <S-Down> a:ide
sethandler <C-Down> a:ide
sethandler <C-2> a:ide
sethandler <C-S-2> a:ide
sethandler <C-6> a:ide
sethandler <C-S-6> a:ide
sethandler <C-A> a:ide
sethandler <C-C> a:ide
sethandler <C-E> a:vim
sethandler <C-F> a:ide
sethandler <C-G> a:ide
sethandler <C-H> a:ide
sethandler <C-I> a:vim
sethandler <C-J> a:ide
sethandler <C-K> a:vim
sethandler <C-L> a:vim
sethandler <C-M> a:ide
sethandler <C-N> a:vim
sethandler <C-O> a:vim
sethandler <C-P> a:ide
sethandler <C-R> a:vim
sethandler <C-S> a:ide
sethandler <C-T> a:vim
sethandler <C-U> a:vim
sethandler <C-V> a:ide
sethandler <C-X> a:ide
sethandler <C-Y> a:ide
sethandler <C-[> a:ide
sethandler <C-\> a:vim
sethandler <C-]> a:ide

sethandler <C-d> n:vim i-x:ide
sethandler <C-w> i:vim n-x:ide
sethandler <C-b> i:vim n-x:ide

""""""""""""""""""""""""""""   keymaps  """""""""""""""""""""""""""""""""
"" Map leader to ,
let mapleader=','

"" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

"" Enable hidden buffers
" set hidden

" Search mappings: These will make it so that going to the next one in a
" search will center on the line it's found in.
nnoremap n nzzzv
nnoremap N Nzzzv

"*****************************************************************************
"" Abbreviations
"*****************************************************************************
"" no one is really happy until you have this shortcuts
" cnoreabbrev W! w!
" cnoreabbrev Q! q!
" cnoreabbrev Qall! qall!
" cnoreabbrev Wq wq
" cnoreabbrev Wa wa
" cnoreabbrev wQ wq
" cnoreabbrev WQ wq
" cnoreabbrev W w
" cnoreabbrev Q q
" cnoreabbrev Qall qall
set relativenumber

"" Remember cursor position
augroup vimrc-remember-cursor-position
  autocmd!
  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
augroup END


" delete surrounding space
nnoremap ds<space> F<space>xf<space>x
nnoremap <leader><space> :noh<CR>

" Insert new line under de current line (only works for gvim)
inoremap <S-CR> <CR><Esc>0<backspace>a


" Adding another way to enter normal mode
inoremap <S-q> <Esc>
vnoremap <S-q> <Esc>

"" moving cursor in insert mode
inoremap <C-w> <Esc>ea
inoremap <C-b> <Esc>bi
inoremap <C-i> <Esc>O
inoremap <C-o> <Esc>o

"" Vmap for maintain Visual Mode after shifting > and <
vmap < <gv
vmap > >gv


"" Move visual block
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

nmap J mzJ`z
nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz
nmap Q <nop>

map <leader>f <Action>(ReformatCode)
"noremap <C-1> <Action>(MethodUp)
"noremap <C-2> <Action>(MethodDown)
" imap <C-[> <Action>(MethodUp)
" imap <C-]> <Action>(MethodDown)
nmap u <Action>($Undo)

set ideajoin
set scrolloff=8

